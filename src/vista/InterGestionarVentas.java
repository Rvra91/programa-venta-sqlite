package vista;

import conexion.Conexion;
import controlador.Ctrl_RegistrarVenta;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
import modelo.CabeceraVenta;
import static vista.InterFacturacion.jTable_productos;
import static vista.InterGestionarVentas.jTable_ventas;

/**
 *
 * @author ediso
 */
public class InterGestionarVentas extends javax.swing.JInternalFrame {

    // private int idCliente = 0;
    public InterGestionarVentas() {
        initComponents();
        this.setSize(new Dimension(900, 500));
        this.setTitle("Gestionar Ventas");
        //Cargar tabla
        this.CargarTablaVentas();

        //insertar imagen en nuestro JLabel
        ImageIcon wallpaper = new ImageIcon("src/img/fondo3.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(900, 500, WIDTH));
        jLabel_wallpaper.setIcon(icono);
        this.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_ventas = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        borrar = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        Eliminar = new javax.swing.JButton();
        jLabel_wallpaper = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrar Ventas");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(51, 51, 51));

        jTable_ventas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_ventas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_ventasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable_ventasMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_ventas);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 710, 250));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 730, 270));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 0, 130, 270));

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        borrar.setBackground(new java.awt.Color(204, 204, 204));
        borrar.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(borrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 200, -1));

        jLabel2.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID VENTA:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 80, -1));

        Eliminar.setText("Eliminar");
        Eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EliminarMouseClicked(evt);
            }
        });
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        jPanel3.add(Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, -1, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 870, 100));
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable_ventasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_ventasMouseClicked

        
       
        
         
         
            }//GEN-LAST:event_jTable_ventasMouseClicked

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed


    }//GEN-LAST:event_EliminarActionPerformed

    private void jTable_ventasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_ventasMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable_ventasMouseEntered

    private void EliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EliminarMouseClicked
     try {
        // Obtener el valor del campo de texto
        String valorAEliminar = borrar.getText();
        System.out.println("Valor a eliminar: " + valorAEliminar);
        int valorEntero = Integer.parseInt(valorAEliminar);
        
        // Crear la consulta SQL DELETE
        String sql = "DELETE FROM tb_cabecera_venta WHERE idcabeceraventa = ?";
        
        // Preparar la consulta SQL
        Connection cn = Conexion.conectar();
        PreparedStatement ps = cn.prepareStatement(sql);
        ps.setInt(1, valorEntero);
        
        // Ejecutar la consulta SQL
        int filasEliminadas = ps.executeUpdate();
        
        // Mostrar el número de filas eliminadas
        System.out.println("Filas eliminadas: " + filasEliminadas);
        
        if (filasEliminadas == 0) {
            JOptionPane.showMessageDialog(null, "El número a eliminar no se encuentra en la base de datos.");
        } else {
            JOptionPane.showMessageDialog(null, "El producto ha sido eliminado correctamente.");
            borrar.setText("");
        }
    } catch (NumberFormatException e) {
        // Mostrar una ventana emergente si se produce una excepción
        JOptionPane.showMessageDialog(null, "Debe ingresar un número entero.");
    } catch (SQLException ex) {
        // Mostrar una ventana emergente si se produce una excepción
        JOptionPane.showMessageDialog(null, "Error al eliminar el producto: " + ex.getMessage());
    }
  String texto = borrar.getText();
        System.out.println(texto);
    }//GEN-LAST:event_EliminarMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Eliminar;
    private javax.swing.JFormattedTextField borrar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_ventas;
    // End of variables declaration//GEN-END:variables


    /*
     * *****************************************************
     * metodo para mostrar todos los clientes registrados
     * *****************************************************
     */
    private void CargarTablaVentas() {
        try {
            Connection cn = Conexion.conectar();
            String sql = "SELECT cv.idCabeceraVenta, cv.valorPagar, cv.fechaVenta, cv.estado, cv.tipoPago, dv.cantidad, p.nombre FROM tb_cabecera_venta cv "
                    + "INNER JOIN tb_detalle_venta dv ON cv.idCabeceraVenta = dv.idCabeceraVenta "
                    + "INNER JOIN tb_producto p ON dv.idProducto = p.idProducto";
            PreparedStatement pst = cn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            // Crear modelo de tabla con las columnas necesarias
            String[] columnas = {"ID", "Valor Pagar", "Fecha Venta", "Estado", "Tipo de Pago", "Cantidad Vendida", "Producto"};
            DefaultTableModel modelo = new DefaultTableModel(null, columnas);

            // Llenar modelo de tabla con los datos de la base de datos
            while (rs.next()) {
                Object[] fila = new Object[7];
                fila[0] = rs.getInt("idCabeceraVenta");
                fila[1] = rs.getDouble("valorPagar");
                fila[2] = rs.getString("fechaVenta");
                fila[3] = rs.getInt("estado");
                fila[4] = rs.getString("tipoPago");
                fila[5] = rs.getInt("cantidad");
                fila[6] = rs.getString("nombre");
                modelo.addRow(fila);
            }

            // Asignar modelo de tabla al jTable_ventas
            jTable_ventas.setModel(modelo);

            rs.close();
            pst.close();
            cn.close();
        } catch (SQLException e) {
            System.err.println("Error al llenar la tabla de ventas: " + e.getMessage());
        }
    }

    private void eliminarVenta() {
        try {
            Connection cn = Conexion.conectar();
            int filaSeleccionada = jTable_ventas.getSelectedRow();
            if (filaSeleccionada == -1) {
                JOptionPane.showMessageDialog(null, "Seleccione una venta para eliminar");
            } else {
                int idVenta = (int) jTable_ventas.getValueAt(filaSeleccionada, 0);
                String sql = "DELETE FROM tb_cabecera_venta WHERE idCabeceraVenta = ?";
                PreparedStatement pst = cn.prepareStatement(sql);
                pst.setInt(1, idVenta);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Venta eliminada correctamente");
                CargarTablaVentas();
                pst.close();
                cn.close();
            }
        } catch (SQLException e) {
            System.err.println("Error al eliminar venta: " + e.getMessage());
        }
    }
}

/*
     * **************************************************
     * Metodo que envia datos seleccionados
     * **************************************************
 */
